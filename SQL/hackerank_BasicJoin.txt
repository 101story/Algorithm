
https://www.hackerrank.com/domains/sql/join

--------------------------------
문제) The Report

You are given two tables: Students and Grades. Students contains three columns ID, Name and Marks.

Ketty gives Eve a task to generate a report containing three columns: Name, Grade and Mark. Ketty doesn't want the NAMES of those students who received a grade lower than 8. The report must be in descending order by grade -- i.e. higher grades are entered first. If there is more than one student with the same grade (8-10) assigned to them, order those particular students by their name alphabetically. Finally, if the grade is lower than 8, use "NULL" as their name and list them by their grades in descending order. If there is more than one student with the same grade (1-7) assigned to them, order those particular students by their marks in ascending order.

Write a query to help Eve.

Sample Output

	Maria 10 99
	Jane 9 81
	Julia 9 88 
	Scarlet 8 78
	NULL 7 63
	NULL 7 68

Note
	Print "NULL"  as the name if the grade is less than 8.

Explanation
	Consider the following table with the grades assigned to the students:
	So, the following students got 8, 9 or 10 grades:

	Maria (grade 10)
	Jane (grade 9)
	Julia (grade 9)
	Scarlet (grade 8)

제출 답 >>>
select if(grade>7,name,'NULL'), grade, marks from Students
inner join Grades g on marks between g.min_mark and g.max_mark 
order by grade desc, name asc;

--------------------------------
중요!!!! 

문제) The Report

Julia just finished conducting a coding contest, and she needs your help assembling the leaderboard! Write a query to print the respective hacker_id and name of hackers who achieved full scores for more than one challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.


Input Format
	Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker. 
	Difficulty: The difficult_level is the level of difficulty of the challenge, and score is the score of the challenge for the difficulty level. 
	Challenges: The challenge_id is the id of the challenge, the hacker_id is the id of the hacker who created the challenge, and difficulty_level is the level of difficulty of the challenge. 
	Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge that the submission belongs to, and score is the score of the submission.


제출 답 >>>

nice code >>>
select h.hacker_id, h.name
from submissions s
inner join challenges c
on s.challenge_id = c.challenge_id
inner join difficulty d
on c.difficulty_level = d.difficulty_level 
inner join hackers h
on s.hacker_id = h.hacker_id
where s.score = d.score and c.difficulty_level = d.difficulty_level
group by h.hacker_id, h.name
having count(s.hacker_id) > 1
order by count(s.hacker_id) desc, s.hacker_id asc

